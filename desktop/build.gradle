plugins {
    id 'java-library'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

apply plugin: "java"

sourceSets.main.java.srcDirs = [ "src/" ]

project.ext.mainClassName = "si.um.feri.kompajler.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../assets")

tasks.register('dist', Jar) {
  from files(sourceSets.main.output.classesDirs)
  from files(sourceSets.main.output.resourcesDir)
  from { configurations.runtimeClasspath.collect { zipTree(it) } }
  from files(project.assetsDir)

  duplicatesStrategy = DuplicatesStrategy.EXCLUDE

  manifest {
    attributes 'Main-Class': project.mainClassName
  }
}

project(":desktop") {
  apply plugin: "java"

  dependencies {
    implementation project(":core-game")
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-controllers-desktop:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-controllers-platform:$gdxVersion:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
  }

  sourceSets.main.resources.srcDirs += file("../assets")
}

dist.dependsOn classes

tasks.register('afterEclipseImport') {
  doLast {
    def classpath = new XmlParser().parse(file(".classpath"))
    def writer = new FileWriter(file(".classpath"))
    def printer = new XmlNodePrinter(new PrintWriter(writer))
    printer.setPreserveWhitespace(true)
    printer.print(classpath)
  }
}

eclipse.project {
  name = appName
}
